package golang

import (
	"strings"

	"github.com/68696c6c/capricorn_rnd/utils"
)

// File represents a leaf node in a golang project tree.
type File struct {
	*utils.File
	*importRequirements
	PKG *Package // this is set when a File is passed to package.AddGoFile()
	// imports      Imports
	// InitFunction Function    `yaml:"init_function,omitempty"`
	// Consts       []Const     `yaml:"consts,omitempty"`
	// Vars         []Var       `yaml:"vars,omitempty"`
	// Interfaces   []Interface `yaml:"interfaces,omitempty"`
	// TypeAliases  []Value     `yaml:"type_aliases,omitempty"`
	structs []*Struct
	// Functions    []Function  `yaml:"functions,omitempty"`
}

func NewFile(basePath, name string) *File {
	return &File{
		File:               utils.NewFile(basePath, utils.Snake(name), "go"),
		importRequirements: newImportRequirements(),
	}
}

func (f *File) Render() string {
	lines := []string{
		`// Code generated by "gonad"; DO NOT EDIT.`,
		f.PKG.declaration,
		"",
		f.imports.Render(),
	}
	for _, s := range f.structs {
		lines = append(lines, s.Render())
	}
	return strings.Join(lines, "\n")
}

func (f *File) AddStruct(s *Struct) {
	f.structs = append(f.structs, s)
}
